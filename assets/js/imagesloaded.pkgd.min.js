
! function(e, t) {
  "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", t) : "object" == typeof module && module.exports ? module.exports = t() : e.EvEmitter = t()
}("undefined" != typeof window ? window : this, function() {
  function e() {}
  var t = e.prototype;
  return t.on = function(e, t) {}, t.once = function(e, t) {}, t.off = function(e, t) {}, t.emitEvent = function(e, t) {}, t.allOff = function() {}, e
}),
function(e, t) {

  "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function(i) {}) : "object" == typeof module && module.exports ? module.exports = t(e, require("ev-emitter")) : e.imagesLoaded = t(e, e.EvEmitter)
}("undefined" != typeof window ? window : this, function(e, t) {
  function i(e, t) {}

  function n(e) {
    if (Array.isArray(e)) return e;
    var t = "object" == typeof e && "number" == typeof e.length;
    return t ? d.call(e) : [e]
  }

  function o(e, t, r) {
    if (!(this instanceof o)) return new o(e, t, r);
    var s = e;
    return "string" == typeof e && (s = document.querySelectorAll(e)), s ? (this.elements = n(s), this.options = i({}, this.options), "function" == typeof t ? r = t : i(this.options, t), r && this.on("always", r), this.getImages(), h && (this.jqDeferred = new h.Deferred), void setTimeout(this.check.bind(this))) : void a.error("Bad element for imagesLoaded " + (s || e))
  }

  function r(e) {}

  function s(e, t) {}
  var h = e.jQuery,
    a = e.console,
    d = Array.prototype.slice;
  o.prototype = Object.create(t.prototype), o.prototype.options = {}, o.prototype.getImages = function() {
    this.images = [], this.elements.forEach(this.addElementImages, this)
  }, o.prototype.addElementImages = function(e) {};
  var u = {};
  return o.prototype.addElementBackgroundImages = function(e) {}, o.prototype.addImage = function(e) {}, o.prototype.addBackground = function(e, t) {}, o.prototype.check = function() {
    function e(e, i, n) {}
    var t = this;
    return this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? void this.images.forEach(function(t) {}) : void this.complete()
  }, o.prototype.progress = function(e, t, i) {}, o.prototype.complete = function() {
    var e = this.hasAnyBroken ? "fail" : "done";
    if (this.isComplete = !0, this.emitEvent(e, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
      var t = this.hasAnyBroken ? "reject" : "resolve";
      this.jqDeferred[t](this)
    }
  }, r.prototype = Object.create(t.prototype), r.prototype.check = function() {}, r.prototype.getIsImageComplete = function() {}, r.prototype.confirm = function(e, t) {}, r.prototype.handleEvent = function(e) {}, r.prototype.onload = function() {}, r.prototype.onerror = function() {}, r.prototype.unbindEvents = function() {}, s.prototype = Object.create(r.prototype), s.prototype.check = function() {}, s.prototype.unbindEvents = function() {}, s.prototype.confirm = function(e, t) {}, o.makeJQueryPlugin = function(t) {
    t = t || e.jQuery, t && (h = t, h.fn.imagesLoaded = function(e, t) {
      var i = new o(this, e, t);
      return i.jqDeferred.promise(h(this))
    })
  }, o.makeJQueryPlugin(), o
});